{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/hydra-news/typescript/src/components/VerifiedNewsCard.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './VerifiedNewsCard.css';\n\n// Types for content entities and claims\n\n// Verification level details\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst verificationLevels = [{\n  level: 0,\n  name: 'None',\n  color: '#e74c3c',\n  description: 'This content has not been verified'\n}, {\n  level: 1,\n  name: 'Minimal',\n  color: '#e67e22',\n  description: 'Basic verification with limited cross-referencing'\n}, {\n  level: 2,\n  name: 'Standard',\n  color: '#f1c40f',\n  description: 'Standard verification with multiple sources'\n}, {\n  level: 3,\n  name: 'High',\n  color: '#2ecc71',\n  description: 'High level of verification with extensive cross-referencing'\n}, {\n  level: 4,\n  name: 'Maximum',\n  color: '#27ae60',\n  description: 'Maximum verification with cryptographic proof and multiple trusted sources'\n}];\n\n// Props for the NewsCard component\n\n// Formats a hash for display by truncating and adding ellipsis\nconst formatHash = hash => {\n  if (!hash) return '';\n  return `${hash.substring(0, 8)}...${hash.substring(hash.length - 8)}`;\n};\n\n// Component for highlighting entities in the text\nconst HighlightedText = ({\n  text,\n  entities,\n  showHighlights\n}) => {\n  if (!showHighlights || !entities || entities.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Sort entities by position\n  const sortedEntities = [...entities].sort((a, b) => a.position.start - b.position.start);\n\n  // Create segments with highlighted parts\n  const segments = [];\n  let lastEnd = 0;\n  sortedEntities.forEach((entity, index) => {\n    // Add text before the entity\n    if (entity.position.start > lastEnd) {\n      segments.push(/*#__PURE__*/_jsxDEV(\"span\", {\n        children: text.substring(lastEnd, entity.position.start)\n      }, `text-${index}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this));\n    }\n\n    // Add the highlighted entity\n    segments.push(/*#__PURE__*/_jsxDEV(\"span\", {\n      className: `entity entity-${entity.type.toLowerCase()}`,\n      title: `${entity.type}: ${entity.name} (Confidence: ${(entity.confidence * 100).toFixed(0)}%)`,\n      children: text.substring(entity.position.start, entity.position.end)\n    }, `entity-${index}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this));\n    lastEnd = entity.position.end;\n  });\n\n  // Add any remaining text after the last entity\n  if (lastEnd < text.length) {\n    segments.push(/*#__PURE__*/_jsxDEV(\"span\", {\n      children: text.substring(lastEnd)\n    }, \"text-end\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this));\n  }\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: segments\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 142,\n    columnNumber: 10\n  }, this);\n};\n\n// Main VerifiedNewsCard component\n_c = HighlightedText;\nconst VerifiedNewsCard = ({\n  title,\n  content,\n  source,\n  author,\n  publishDate,\n  verificationLevel,\n  trustScore,\n  contentHash,\n  entities = [],\n  claims = [],\n  entanglementHash,\n  onViewDetails\n}) => {\n  _s();\n  const [showHighlights, setShowHighlights] = useState(true);\n  const [showClaims, setShowClaims] = useState(false);\n  const [expandedClaimId, setExpandedClaimId] = useState(null);\n\n  // Get verification level details\n  const level = verificationLevels.find(l => l.level === verificationLevel) || verificationLevels[0];\n\n  // Format trust score as percentage\n  const formattedTrustScore = `${(trustScore * 100).toFixed(0)}%`;\n\n  // Toggle expanded claim\n  const toggleClaim = claimId => {\n    if (expandedClaimId === claimId) {\n      setExpandedClaimId(null);\n    } else {\n      setExpandedClaimId(claimId);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"verified-news-card\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-header\",\n      style: {\n        backgroundColor: level.color\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"verification-badge\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"verification-level\",\n          children: level.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"verification-score\",\n          children: formattedTrustScore\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"card-title\",\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-metadata\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"source\",\n          children: source\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }, this), author && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"author\",\n          children: [\"By \", author]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 22\n        }, this), publishDate && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"date\",\n          children: publishDate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 27\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content-area\",\n        children: /*#__PURE__*/_jsxDEV(HighlightedText, {\n          text: content,\n          entities: entities,\n          showHighlights: showHighlights\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: showHighlights,\n            onChange: () => setShowHighlights(!showHighlights)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 13\n          }, this), \"Show Entity Highlights\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: showClaims,\n            onChange: () => setShowClaims(!showClaims)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 13\n          }, this), \"Show Claims Analysis\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this), showClaims && claims.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"claims-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Claims Analysis\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"claims-list\",\n          children: claims.map(claim => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"claim-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"claim-header\",\n              onClick: () => toggleClaim(claim.id),\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"claim-text\",\n                children: claim.text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 239,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: `claim-confidence confidence-${Math.floor(claim.confidence * 5)}`,\n                children: [(claim.confidence * 100).toFixed(0), \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 19\n            }, this), expandedClaimId === claim.id && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"claim-details\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"Associated Entities:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 247,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                className: \"claim-entities\",\n                children: claim.entities.map((entity, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n                  className: `entity-item entity-${entity.type.toLowerCase()}`,\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: entity.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 251,\n                    columnNumber: 29\n                  }, this), \" (\", entity.type, \")\"]\n                }, idx, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 250,\n                  columnNumber: 27\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 248,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 21\n            }, this)]\n          }, claim.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-footer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"hash-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"hash-label\",\n          children: \"Content Hash:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"hash-value\",\n          children: formatHash(contentHash)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 11\n        }, this), entanglementHash && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"hash-label\",\n            children: \"Entanglement:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"hash-value\",\n            children: formatHash(entanglementHash)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"details-button\",\n        onClick: onViewDetails,\n        children: \"View Verification Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 180,\n    columnNumber: 5\n  }, this);\n};\n_s(VerifiedNewsCard, \"wqDwkRrqPduXjC+Fi+jOadT0LxA=\");\n_c2 = VerifiedNewsCard;\nexport default VerifiedNewsCard;\nvar _c, _c2;\n$RefreshReg$(_c, \"HighlightedText\");\n$RefreshReg$(_c2, \"VerifiedNewsCard\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","verificationLevels","level","name","color","description","formatHash","hash","substring","length","HighlightedText","text","entities","showHighlights","children","fileName","_jsxFileName","lineNumber","columnNumber","sortedEntities","sort","a","b","position","start","segments","lastEnd","forEach","entity","index","push","className","type","toLowerCase","title","confidence","toFixed","end","_c","VerifiedNewsCard","content","source","author","publishDate","verificationLevel","trustScore","contentHash","claims","entanglementHash","onViewDetails","_s","setShowHighlights","showClaims","setShowClaims","expandedClaimId","setExpandedClaimId","find","l","formattedTrustScore","toggleClaim","claimId","style","backgroundColor","checked","onChange","map","claim","onClick","id","Math","floor","idx","_c2","$RefreshReg$"],"sources":["/home/ubuntu/hydra-news/typescript/src/components/VerifiedNewsCard.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './VerifiedNewsCard.css';\n\n// Types for content entities and claims\ninterface ContentEntity {\n  name: string;\n  type: string;\n  context: string;\n  confidence: number;\n  position: {\n    start: number;\n    end: number;\n  };\n}\n\ninterface ContentClaim {\n  id: string;\n  text: string;\n  entities: ContentEntity[];\n  source_text: string;\n  confidence: number;\n  type: string;\n  position: {\n    start: number;\n    end: number;\n  };\n}\n\n// Verification level details\ninterface VerificationLevel {\n  level: number;\n  name: string;\n  color: string;\n  description: string;\n}\n\nconst verificationLevels: VerificationLevel[] = [\n  { \n    level: 0, \n    name: 'None', \n    color: '#e74c3c', \n    description: 'This content has not been verified' \n  },\n  { \n    level: 1, \n    name: 'Minimal', \n    color: '#e67e22', \n    description: 'Basic verification with limited cross-referencing' \n  },\n  { \n    level: 2, \n    name: 'Standard', \n    color: '#f1c40f', \n    description: 'Standard verification with multiple sources' \n  },\n  { \n    level: 3, \n    name: 'High', \n    color: '#2ecc71', \n    description: 'High level of verification with extensive cross-referencing' \n  },\n  { \n    level: 4, \n    name: 'Maximum', \n    color: '#27ae60', \n    description: 'Maximum verification with cryptographic proof and multiple trusted sources' \n  }\n];\n\n// Props for the NewsCard component\ninterface VerifiedNewsCardProps {\n  title: string;\n  content: string;\n  source: string;\n  author?: string;\n  publishDate?: string;\n  verificationLevel: number;\n  trustScore: number;\n  contentHash: string;\n  entities?: ContentEntity[];\n  claims?: ContentClaim[];\n  entanglementHash?: string;\n  onViewDetails?: () => void;\n}\n\n// Formats a hash for display by truncating and adding ellipsis\nconst formatHash = (hash: string): string => {\n  if (!hash) return '';\n  return `${hash.substring(0, 8)}...${hash.substring(hash.length - 8)}`;\n};\n\n// Component for highlighting entities in the text\nconst HighlightedText: React.FC<{ \n  text: string; \n  entities: ContentEntity[]; \n  showHighlights: boolean;\n}> = ({ text, entities, showHighlights }) => {\n  if (!showHighlights || !entities || entities.length === 0) {\n    return <p>{text}</p>;\n  }\n\n  // Sort entities by position\n  const sortedEntities = [...entities].sort((a, b) => a.position.start - b.position.start);\n  \n  // Create segments with highlighted parts\n  const segments: JSX.Element[] = [];\n  let lastEnd = 0;\n  \n  sortedEntities.forEach((entity, index) => {\n    // Add text before the entity\n    if (entity.position.start > lastEnd) {\n      segments.push(\n        <span key={`text-${index}`}>\n          {text.substring(lastEnd, entity.position.start)}\n        </span>\n      );\n    }\n    \n    // Add the highlighted entity\n    segments.push(\n      <span \n        key={`entity-${index}`} \n        className={`entity entity-${entity.type.toLowerCase()}`}\n        title={`${entity.type}: ${entity.name} (Confidence: ${(entity.confidence * 100).toFixed(0)}%)`}\n      >\n        {text.substring(entity.position.start, entity.position.end)}\n      </span>\n    );\n    \n    lastEnd = entity.position.end;\n  });\n  \n  // Add any remaining text after the last entity\n  if (lastEnd < text.length) {\n    segments.push(\n      <span key=\"text-end\">\n        {text.substring(lastEnd)}\n      </span>\n    );\n  }\n  \n  return <p>{segments}</p>;\n};\n\n// Main VerifiedNewsCard component\nconst VerifiedNewsCard: React.FC<VerifiedNewsCardProps> = ({ \n  title,\n  content,\n  source,\n  author,\n  publishDate,\n  verificationLevel,\n  trustScore,\n  contentHash,\n  entities = [],\n  claims = [],\n  entanglementHash,\n  onViewDetails\n}) => {\n  const [showHighlights, setShowHighlights] = useState<boolean>(true);\n  const [showClaims, setShowClaims] = useState<boolean>(false);\n  const [expandedClaimId, setExpandedClaimId] = useState<string | null>(null);\n  \n  // Get verification level details\n  const level = verificationLevels.find(l => l.level === verificationLevel) || verificationLevels[0];\n  \n  // Format trust score as percentage\n  const formattedTrustScore = `${(trustScore * 100).toFixed(0)}%`;\n  \n  // Toggle expanded claim\n  const toggleClaim = (claimId: string) => {\n    if (expandedClaimId === claimId) {\n      setExpandedClaimId(null);\n    } else {\n      setExpandedClaimId(claimId);\n    }\n  };\n  \n  return (\n    <div className=\"verified-news-card\">\n      {/* Header with verification level */}\n      <div className=\"card-header\" style={{ backgroundColor: level.color }}>\n        <div className=\"verification-badge\">\n          <span className=\"verification-level\">{level.name}</span>\n          <span className=\"verification-score\">{formattedTrustScore}</span>\n        </div>\n      </div>\n      \n      {/* Content area */}\n      <div className=\"card-content\">\n        <h2 className=\"card-title\">{title}</h2>\n        \n        <div className=\"card-metadata\">\n          <span className=\"source\">{source}</span>\n          {author && <span className=\"author\">By {author}</span>}\n          {publishDate && <span className=\"date\">{publishDate}</span>}\n        </div>\n        \n        <div className=\"content-area\">\n          <HighlightedText \n            text={content} \n            entities={entities} \n            showHighlights={showHighlights} \n          />\n        </div>\n        \n        {/* Controls for entity highlighting and claims */}\n        <div className=\"content-controls\">\n          <label>\n            <input \n              type=\"checkbox\" \n              checked={showHighlights} \n              onChange={() => setShowHighlights(!showHighlights)} \n            />\n            Show Entity Highlights\n          </label>\n          \n          <label>\n            <input \n              type=\"checkbox\" \n              checked={showClaims} \n              onChange={() => setShowClaims(!showClaims)} \n            />\n            Show Claims Analysis\n          </label>\n        </div>\n        \n        {/* Claims section */}\n        {showClaims && claims.length > 0 && (\n          <div className=\"claims-section\">\n            <h3>Claims Analysis</h3>\n            <ul className=\"claims-list\">\n              {claims.map(claim => (\n                <li key={claim.id} className=\"claim-item\">\n                  <div \n                    className=\"claim-header\" \n                    onClick={() => toggleClaim(claim.id)}\n                  >\n                    <span className=\"claim-text\">{claim.text}</span>\n                    <span className={`claim-confidence confidence-${Math.floor(claim.confidence * 5)}`}>\n                      {(claim.confidence * 100).toFixed(0)}%\n                    </span>\n                  </div>\n                  \n                  {expandedClaimId === claim.id && (\n                    <div className=\"claim-details\">\n                      <h4>Associated Entities:</h4>\n                      <ul className=\"claim-entities\">\n                        {claim.entities.map((entity, idx) => (\n                          <li key={idx} className={`entity-item entity-${entity.type.toLowerCase()}`}>\n                            <strong>{entity.name}</strong> ({entity.type})\n                          </li>\n                        ))}\n                      </ul>\n                    </div>\n                  )}\n                </li>\n              ))}\n            </ul>\n          </div>\n        )}\n      </div>\n      \n      {/* Footer with verification details */}\n      <div className=\"card-footer\">\n        <div className=\"hash-info\">\n          <span className=\"hash-label\">Content Hash:</span>\n          <span className=\"hash-value\">{formatHash(contentHash)}</span>\n          \n          {entanglementHash && (\n            <>\n              <span className=\"hash-label\">Entanglement:</span>\n              <span className=\"hash-value\">{formatHash(entanglementHash)}</span>\n            </>\n          )}\n        </div>\n        \n        <button \n          className=\"details-button\" \n          onClick={onViewDetails}\n        >\n          View Verification Details\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default VerifiedNewsCard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}