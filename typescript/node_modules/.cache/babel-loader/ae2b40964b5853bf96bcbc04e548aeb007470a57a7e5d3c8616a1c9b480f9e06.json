{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/hydra-news/typescript/src/components/verification/ClaimVerification.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './ClaimVerification.css';\nimport VerificationScore from './VerificationScore';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n/**\n * Component to display a verified or disputed claim\n */\nconst ClaimVerification = ({\n  claim,\n  isVerified,\n  article\n}) => {\n  _s();\n  const [expanded, setExpanded] = useState(false);\n\n  // Find the original claim in the article if possible\n  const findOriginalClaim = () => {\n    if (!article.claims) return null;\n    return article.claims.find(c => c.id === claim.claim_id);\n  };\n  const originalClaim = findOriginalClaim();\n\n  // Helper function to render source references\n  const renderSources = () => {\n    if (isVerified && 'supporting_references' in claim) {\n      return claim.supporting_references.map((ref, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"claim-source\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"source-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"source-name\",\n            children: ref.source\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"source-title\",\n            children: ref.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"source-score\",\n          children: [\"Support: \", Math.round(ref.support_score * 100), \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), ref.url && /*#__PURE__*/_jsxDEV(\"a\", {\n          href: ref.url,\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          className: \"source-link\",\n          children: \"View Source\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this)]\n      }, `supporting-${index}`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this));\n    } else if (!isVerified && 'disputed_by' in claim) {\n      return claim.disputed_by.map((ref, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"claim-source disputing\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"source-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"source-name\",\n            children: ref.source\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"source-title\",\n            children: ref.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"source-score\",\n          children: [\"Dispute: \", Math.round(ref.dispute_score * 100), \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), ref.url && /*#__PURE__*/_jsxDEV(\"a\", {\n          href: ref.url,\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          className: \"source-link\",\n          children: \"View Source\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this)]\n      }, `disputing-${index}`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this));\n    }\n    return null;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `claim-verification ${isVerified ? 'verified' : 'disputed'}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"claim-header\",\n      onClick: () => setExpanded(!expanded),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"claim-score\",\n        children: /*#__PURE__*/_jsxDEV(VerificationScore, {\n          score: claim.score,\n          size: \"small\",\n          showLabel: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"claim-text\",\n        children: claim.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"claim-expand-icon\",\n        children: expanded ? 'âˆ’' : '+'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), expanded && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"claim-details\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"claim-score-details\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"score-label\",\n          children: isVerified ? 'Verification Score:' : 'Dispute Score:'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"score-value\",\n          children: [Math.round(claim.score * 100), \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this), originalClaim && originalClaim.entities && originalClaim.entities.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"claim-entities\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"entities-label\",\n          children: \"Entities:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"entities-list\",\n          children: originalClaim.entities.map((entity, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n            className: `entity-badge ${entity.type.toLowerCase()}`,\n            children: entity.name\n          }, `entity-${index}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"claim-sources\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sources-label\",\n          children: isVerified ? 'Supporting Sources:' : 'Disputing Sources:'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sources-list\",\n          children: renderSources()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n_s(ClaimVerification, \"DuL5jiiQQFgbn7gBKAyxwS/H4Ek=\");\n_c = ClaimVerification;\nexport default ClaimVerification;\nvar _c;\n$RefreshReg$(_c, \"ClaimVerification\");","map":{"version":3,"names":["React","useState","VerificationScore","jsxDEV","_jsxDEV","ClaimVerification","claim","isVerified","article","_s","expanded","setExpanded","findOriginalClaim","claims","find","c","id","claim_id","originalClaim","renderSources","supporting_references","map","ref","index","className","children","source","fileName","_jsxFileName","lineNumber","columnNumber","title","Math","round","support_score","url","href","target","rel","disputed_by","dispute_score","onClick","score","size","showLabel","text","entities","length","entity","type","toLowerCase","name","_c","$RefreshReg$"],"sources":["/home/ubuntu/hydra-news/typescript/src/components/verification/ClaimVerification.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport './ClaimVerification.css';\nimport VerificationScore from './VerificationScore';\nimport { Article, VerifiedClaim, DisputedClaim } from '../../types/article';\n\ninterface ClaimVerificationProps {\n  claim: VerifiedClaim | DisputedClaim;\n  isVerified: boolean;\n  article: Article;\n}\n\n/**\n * Component to display a verified or disputed claim\n */\nconst ClaimVerification: React.FC<ClaimVerificationProps> = ({\n  claim,\n  isVerified,\n  article,\n}) => {\n  const [expanded, setExpanded] = useState(false);\n  \n  // Find the original claim in the article if possible\n  const findOriginalClaim = () => {\n    if (!article.claims) return null;\n    return article.claims.find(c => c.id === claim.claim_id);\n  };\n  \n  const originalClaim = findOriginalClaim();\n  \n  // Helper function to render source references\n  const renderSources = () => {\n    if (isVerified && 'supporting_references' in claim) {\n      return claim.supporting_references.map((ref, index) => (\n        <div key={`supporting-${index}`} className=\"claim-source\">\n          <div className=\"source-info\">\n            <span className=\"source-name\">{ref.source}</span>\n            <span className=\"source-title\">{ref.title}</span>\n          </div>\n          <div className=\"source-score\">\n            Support: {Math.round(ref.support_score * 100)}%\n          </div>\n          {ref.url && (\n            <a \n              href={ref.url}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              className=\"source-link\"\n            >\n              View Source\n            </a>\n          )}\n        </div>\n      ));\n    } else if (!isVerified && 'disputed_by' in claim) {\n      return claim.disputed_by.map((ref, index) => (\n        <div key={`disputing-${index}`} className=\"claim-source disputing\">\n          <div className=\"source-info\">\n            <span className=\"source-name\">{ref.source}</span>\n            <span className=\"source-title\">{ref.title}</span>\n          </div>\n          <div className=\"source-score\">\n            Dispute: {Math.round(ref.dispute_score * 100)}%\n          </div>\n          {ref.url && (\n            <a \n              href={ref.url}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              className=\"source-link\"\n            >\n              View Source\n            </a>\n          )}\n        </div>\n      ));\n    }\n    return null;\n  };\n  \n  return (\n    <div className={`claim-verification ${isVerified ? 'verified' : 'disputed'}`}>\n      <div className=\"claim-header\" onClick={() => setExpanded(!expanded)}>\n        <div className=\"claim-score\">\n          <VerificationScore \n            score={claim.score}\n            size=\"small\"\n            showLabel={false}\n          />\n        </div>\n        <div className=\"claim-text\">{claim.text}</div>\n        <div className=\"claim-expand-icon\">\n          {expanded ? 'âˆ’' : '+'}\n        </div>\n      </div>\n      \n      {expanded && (\n        <div className=\"claim-details\">\n          <div className=\"claim-score-details\">\n            <div className=\"score-label\">\n              {isVerified ? 'Verification Score:' : 'Dispute Score:'}\n            </div>\n            <div className=\"score-value\">\n              {Math.round(claim.score * 100)}%\n            </div>\n          </div>\n          \n          {originalClaim && originalClaim.entities && originalClaim.entities.length > 0 && (\n            <div className=\"claim-entities\">\n              <div className=\"entities-label\">Entities:</div>\n              <div className=\"entities-list\">\n                {originalClaim.entities.map((entity, index) => (\n                  <span \n                    key={`entity-${index}`} \n                    className={`entity-badge ${entity.type.toLowerCase()}`}\n                  >\n                    {entity.name}\n                  </span>\n                ))}\n              </div>\n            </div>\n          )}\n          \n          <div className=\"claim-sources\">\n            <div className=\"sources-label\">\n              {isVerified ? 'Supporting Sources:' : 'Disputing Sources:'}\n            </div>\n            <div className=\"sources-list\">\n              {renderSources()}\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ClaimVerification;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}